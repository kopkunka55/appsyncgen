import { util } from '@aws-appsync/utils';

export function request(ctx) {
  const { input } = ctx.args;
  let id;
  if (input.id == undefined) {
    id = util.autoUlid();
  } else {
    id = input.id;
  }
  const createdAt = util.time.nowISO8601();
  return {
    operation: 'TransactWriteItems',
    transactItems: [
      {
        table: '{{ .TableName }}',
        operation: 'PutItem',
        key: util.dynamodb.toMapValues({PK: `{{ .PK }}#${id}`,SK: `{{ .SK }}#${id}`}),
        attributeValues: util.dynamodb.toMapValues({
          id: id,
          createdAt: createdAt,
          updatedAt: createdAt,
          _version: 1,
          {{- range .Attributes }}
          {{ if ne . "id" }}{{ . }}: input.{{ . }},{{ end }}
          {{- end }}
        }),
      },
      {{- range .Connections }}
      {
        table: '{{ .TableName }}',
        operation: 'PutItem',
        key: util.dynamodb.toMapValues({ PK: '{{ .SK }}#' + input.{{ .SK | toLowerCase }}ID, SK: `{{ .PK }}#${id}`}),
        attributeValues: util.dynamodb.toMapValues({
          createdAt: createdAt,
          updatedAt: createdAt,
        }),
      },
      {{- end }}
    ],
  };
}

export function response(ctx){
  if (ctx.error){
    util.error(ctx.error.message, ctx.error.type, ctx.result);
  }
  return {
     {{ .PK | toLowerCase }}ID: Object.values(ctx.result.keys[0])[0].split('#')[1]
  }
}
